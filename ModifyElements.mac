/PREP7 ! enter preprocessor to modify elements parameters	##########################
!*GET, numelem, ELEM,,COUNT															!#
*DO, ce, 1, numelem																	!#
	local_max_psi = 0																!#
	*DO, i, 1, 4																	!#
		*GET, node_num, ELEM, ce, NODE, i											!#
		*IF, psi_n(node_num), ge, psi_t(node_num), then
			psi(node_num) = psi_n(node_num)
		*ELSE
			psi(node_num) = psi_t(node_num)
		*ENDIF
		*IF, psi(node_num), gt, local_max_psi, then									!#
			local_max_psi = psi(node_num)											!#
		*ENDIF																		!#
	*ENDDO																			!#
	! part about stretching psi_n to the right #################################		!#
	MP, EX, ce, default_EX*(1 - psi_stretch*(local_max_psi)**psi_power)	!#		!#
	
*ENDDO		!#########################################################################

/COM, ########## selecting nodes to kill ##########

! New way to kill elements and groups
*IF, DoAverageOfDamage, eq, 'yes', or, DoAverageOfStress, eq, 'yes', then
	*IF, max_psi, ge, max_acceptable_psi, then
		*DO, ce, 1, numelem
			*DO, i, 1, 4
				*GET, cn, ELEM, ce, NODE, i
				*IF, listOfGroups(cn), eq, max_psi_group, then
					*IF, psi(cn), ge, max_acceptable_group_psi, then
						EKILL, ce
						*CYCLE
					*ENDIF
				*ENDIF
			*ENDDO
		*ENDDO
		
		!max_psi_group = listOfGroups(max_psi_node)
		flagToZeroAfterwards = 0
		
		*IF, max_psi_group, ne, 0, then
			*DO, iterator1, 2, listOfFriends(max_psi_group, 1) + 1
				cn = listOfFriends(max_psi_group, iterator1)
				
				*IF, psi(cn), ge, max_acceptable_group_psi, then
					*IF, psi_n(cn), ge, psi_t(cn), then
						nodes_to_kill_n = nodes_to_kill_n + 1
					*ELSE
						nodes_to_kill_t = nodes_to_kill_t + 1
					*ENDIF
					psi_n(cn) = -1
					psi_t(cn) = -1
					psi(cn) = -1
				*ELSE
					*IF, cn, eq, max_psi_group, then
						flagToZeroAfterwards = 1
						*CYCLE
					*ENDIF
					listOfGroups(cn) = 0
					iterationsToDo2 = listOfFriends(cn, 1) + 1
					*DO, iterator2, 1, iterationsToDo2
						listOfFriends(cn, iterator2) = 0
						listOfAlphaInf(cn, iterator2) = 0
						listOfAlphaD(cn, iterator2) = 0
					*ENDDO
				*ENDIF
		
			*ENDDO
		*ELSEIF, max_psi_group, eq, 0, then
		!*IF, max_psi_group, eq, 0, then
		!	cn = max_psi_node
		!	
		!	*IF, psi(cn), ge, max_acceptable_group_psi, then
		!		*IF, psi_n(cn), ge, psi_t(cn), then
		!			nodes_to_kill_n = nodes_to_kill_n + 1
		!		*ELSE
		!			nodes_to_kill_t = nodes_to_kill_t + 1
		!		*ENDIF
		!		psi_n(cn) = -1
		!		psi_t(cn) = -1
		!		psi(cn) = -1
		!	*ELSE
		!		*IF, cn, eq, max_psi_group, then
		!			flagToZeroAfterwards = 1
		!			*CYCLE
		!		*ENDIF
		!		listOfGroups(cn) = 0
		!		iterationsToDo2 = listOfFriends(cn, 1) + 1
		!		*DO, iterator2, 1, iterationsToDo2
		!			listOfFriends(cn, iterator2) = 0
		!			listOfAlphaInf(cn, iterator2) = 0
		!			listOfAlphaD(cn, iterator2) = 0
		!		*ENDDO
		!	*ENDIF
		*ENDIF
		
		*IF, flagToZeroAfterwards, eq, 1, then
			cn = max_psi_group
			listOfGroups(cn) = 0
			iterationsToDo2 = listOfFriends(cn, 1) + 1
			*DO, iterator2, 1, iterationsToDo2
				listOfFriends(cn, iterator2) = 0
				listOfAlphaInf(cn, iterator2) = 0
				listOfAlphaD(cn, iterator2) = 0
			*ENDDO
		*ENDIF
		
		amountOfAveragedGroupsLeft = amountOfAveragedGroupsLeft - 1
	*ENDIF
*ELSE
	! Old way to kill elements
	*DO, ce, 1, numelem
		KillThisElement = 0
		*DO, i, 1, 4
			*GET, node_num, ELEM, ce, NODE, i
			*IF, psi(node_num), gt, max_acceptable_psi, then
				KillThisElement = 1
			*ENDIF
		*ENDDO
		*IF, KillThisElement, eq, 1, then
			EKILL, ce
		*ENDIF
	*ENDDO
*ENDIF


*DO, cn, 1, ntot
	*IF, psi(cn), ge, max_acceptable_psi, then
		*IF, psi_n(cn), ge, psi_t(cn), then
			nodes_to_kill_n = nodes_to_kill_n + 1
		*ELSE
			nodes_to_kill_t = nodes_to_kill_t + 1
		*ENDIF
		*SET, psi_n(cn), -1
		*SET, psi_t(cn), -1
	*ENDIF
*ENDDO


total_dead_nodes_n = total_dead_nodes_n + nodes_to_kill_n
total_dead_nodes_t = total_dead_nodes_t + nodes_to_kill_t

allsel
