growthOfDamage_n = currentLevelOfAveraging_n - previousLevelOfAveraging_n
growthOfDamage_t = currentLevelOfAveraging_t - previousLevelOfAveraging_t
*IF, growthOfDamage_n, ge, growthOfDamage_t, then
	growthOfDamage = growthOfDamage_n
*ELSE
	growthOfDamage = growthOfDamage_t
*ENDIF

wasPsiAveraged = 0

*IF, MOD(GlobalStep,5), eq, 0, then
!*IF, growthOfDamage, ge, growthThreshold, then
	wasPsiAveraged = 1
	
	*DO, cn, 1, ntot
		psi_n_tilda(cn) = 0
		psi_t_tilda(cn) = 0
		*DO, friendNode, 2, listOfFriends(cn, 1) + 1
			friendNodeGlobalNumber = listOfFriends(cn, friendNode)
			*DO, tempI, 2, listOfFriends(friendNodeGlobalNumber, 1) + 1
				*IF, listOfFriends(friendNodeGlobalNumber, tempI), eq, cn, then
					revertAlphaD = listOfAlphaD(friendNodeGlobalNumber, tempI)
					*EXIT
				*ENDIF
			*ENDDO
			psi_n_tilda(cn) = psi_n_tilda(cn) + psi_n(listOfFriends(cn, friendNode))*revertAlphaD
			psi_t_tilda(cn) = psi_t_tilda(cn) + psi_t(listOfFriends(cn, friendNode))*revertAlphaD
		*ENDDO
	*ENDDO
	
	psi_n_beforeAveraging = 0
	psi_n_afterAveraging = 0
	*DO, cn, 1, ntot
		psi_n_beforeAveraging = psi_n_beforeAveraging + psi_n(cn)
		psi_n(cn) = (averagingNewValue*psi_n_tilda(cn) + averagingOldValue*psi_n(cn))
		psi_t(cn) = (averagingNewValue*psi_t_tilda(cn) + averagingOldValue*psi_n(cn))
		psi_n_afterAveraging = psi_n_afterAveraging + psi_n(cn)
	*ENDDO
*ENDIF



currentLevelOfAveraging_n = max_psi_n
currentLevelOfAveraging_t = max_psi_t
*IF, wasPsiAveraged, eq, 1, then
	previousLevelOfAveraging_n = currentLevelOfAveraging_n
	previousLevelOfAveraging_t = currentLevelOfAveraging_t
*ENDIF
