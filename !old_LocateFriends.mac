maxNumberOfFriends = 0

*DO, cn, 1, ntot
	*GET, myX, NODE, cn, LOC, X
	*GET, myY, NODE, cn, LOC, Y
	*GET, myZ, NODE, cn, LOC, Z
	numberOfFriends = 0
	*DO, possibleFriend, 1, ntot
		*GET, hisX, NODE, possibleFriend, LOC, X
		*GET, hisY, NODE, possibleFriend, LOC, Y
		*GET, hisZ, NODE, possibleFriend, LOC, Z
		distance = sqrt((hisX - myX)**2 + (hisY - myY)**2 + (hisZ - myZ)**2)
		*IF, distance, lt, dislocationRadius, then
			numberOfFriends = numberOfFriends + 1
		*ENDIF
	*ENDDO
	*IF, numberOfFriends, gt, maxNumberOfFriends, then
		maxNumberOfFriends = numberOfFriends
	*ENDIF
*ENDDO

maxNumberOfFriends = maxNumberOfFriends
memoryForListOfFriends = ntot*maxNumberOfFriends*16/1024/1024
memoryForListOfAlphaInf = memoryForListOfFriends
memoryForListOfAlphaD = memoryForListOfFriends
memoryForAllLists = memoryForListOfFriends + memoryForListOfAlphaInf + memoryForListOfAlphaD
*IF, memoryForAllLists, gt, (20*1024), then
	/COM, Too much memory required
	/eof
*ENDIF
*DIM, listOfFriends, ARRAY, ntot, (maxNumberOfFriends + 1)
*DIM, listOfAlphaInf, ARRAY, ntot, (maxNumberOfFriends + 1)
*DIM, listOfAlphaD , ARRAY, ntot, (maxNumberOfFriends + 1)

*DO, cn, 1, ntot
	*GET, myX, NODE, cn, LOC, X
	*GET, myY, NODE, cn, LOC, Y
	*GET, myZ, NODE, cn, LOC, Z
	numberOfFriends = 0
	alphaIntegral = 0
	*DO, possibleFriend, 1, ntot
		*GET, hisX, NODE, possibleFriend, LOC, X
		*GET, hisY, NODE, possibleFriend, LOC, Y
		*GET, hisZ, NODE, possibleFriend, LOC, Z
		distance = sqrt((hisX - myX)**2 + (hisY - myY)**2 + (hisZ - myZ)**2)
		*IF, distance, le, dislocationRadius, then
			numberOfFriends = numberOfFriends + 1
			listOfFriends(cn, numberOfFriends + 1) = possibleFriend
			rij = distance/dislocationRadius
			listOfAlphaInf(cn, numberOfFriends + 1) = (1 - rij**4)**2
			alphaIntegral = alphaIntegral + listOfAlphaInf(cn, numberOfFriends + 1)
		*ENDIF
	*ENDDO
	listOfFriends(cn, 1) = numberOfFriends
	listOfAlphaInf(cn, 1) = numberOfFriends
	*DO, friendNumber, 2, listOfFriends(cn, 1) + 1
		listOfAlphaD(cn, friendNumber) = listOfAlphaInf(cn, friendNumber)/alphaIntegral
	*ENDDO
	listOfAlphaD(cn, 1) = numberOfFriends
*ENDDO

*STATUS, listOfFriends, 199, 199
*STATUS, listOfAlphaInf, 199, 199
*STATUS, listOfAlphaD, 199, 199